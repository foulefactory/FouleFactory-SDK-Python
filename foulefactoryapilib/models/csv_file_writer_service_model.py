# -*- coding: utf-8 -*-

"""
    foulefactoryapilib.models.csv_file_writer_service_model
 
    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 09/14/2016
"""
from .base_model import BaseModel

class CsvFileWriterServiceModel(BaseModel):

    """Implementation of the 'CsvFileWriterServiceModel' model.

    TODO: type model description here.

    Attributes:
        id_project (int): TODO: type description here.
        file (string): TODO: type description here.
        header (bool): TODO: type description here.
        separator (string): TODO: type description here.

    """

    def __init__(self, 
                 id_project = None,
                 file = None,
                 header = None,
                 separator = None):
        """Constructor for the CsvFileWriterServiceModel class"""
        
        # Initialize members of the class
        self.id_project = id_project
        self.file = file
        self.header = header
        self.separator = separator

        # Create a mapping from Model property names to API property names
        self.names = {
            "id_project" : "IdProject",
            "file" : "File",
            "header" : "Header",
            "separator" : "Separator",
        }


    @classmethod
    def from_dictionary(cls, 
                        dictionary):
        """Creates an instance of this model from a dictionary
       
        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.
            
        Returns:
            object: An instance of this structure class.
            
        """
        if dictionary == None:
            return None
        else:
            # Extract variables from the dictionary
            id_project = dictionary.get("IdProject")
            file = dictionary.get("File")
            header = dictionary.get("Header")
            separator = dictionary.get("Separator")
            # Return an object of this model
            return cls(id_project,
                       file,
                       header,
                       separator)
